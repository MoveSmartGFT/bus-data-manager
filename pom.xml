<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.busDataManager</groupId>
	<artifactId>com.busDataManager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>com.busDataManager</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<spring-modulith.version>1.2.4</spring-modulith.version>
		<instancio-junit.version>5.0.2</instancio-junit.version>
		<json-unit.version>3.4.1</json-unit.version>
		<jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
		<jmolecules-bom.version>2023.1.4</jmolecules-bom.version>
		<jacoco.version>0.8.12</jacoco.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>6.1.13</scope>
		</dependency>

		<!--
		https://docs.spring.io/spring-modulith/docs/current-SNAPSHOT/reference/html/
		Asegura la estructura del ddd por modulos mediante modulith
		-->
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jmolecules</groupId>
			<artifactId>jmolecules-onion-architecture</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jmolecules.integrations</groupId>
			<artifactId>jmolecules-starter-ddd</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jmolecules.integrations</groupId>
			<artifactId>jmolecules-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
		Necesario para el uso de repositorios con jpa
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>

		<!--
		https://www.baeldung.com/java-validation
		Habilita el uso de anotaciones para la validacion de datos
		-->
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>${jakarta.validation-api.version}</version>
		</dependency>

		<!--
		Habilita las anotaciones de lombok
		-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!--
		Ayuda a la generacion de objetos de forma aleatoria siguiendo las validaciones
		-->
		<dependency>
			<groupId>org.instancio</groupId>
			<artifactId>instancio-junit</artifactId>
			<scope>test</scope>
			<version>${instancio-junit.version}</version>
		</dependency>

		<!--
		Ayuda a testear json
		-->
		<dependency>
			<groupId>net.javacrumbs.json-unit</groupId>
			<artifactId>json-unit-assertj</artifactId>
			<scope>test</scope>
			<version>${json-unit.version}</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.json-unit</groupId>
			<artifactId>json-unit-spring</artifactId>
			<scope>test</scope>
			<version>${json-unit.version}</version>
		</dependency>

		<!--
		Base de datos h2 temporal durante el desarrollo
		-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jmolecules</groupId>
				<artifactId>jmolecules-bom</artifactId>
				<version>${jmolecules-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.modulith</groupId>
				<artifactId>spring-modulith-bom</artifactId>
				<version>${spring-modulith.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- Configurar el agente de JaCoCo -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>

					<!-- Generar el informe HTML -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Configurar la ubicaciÃ³n y formato del informe -->
							<outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>
							<formats>
								<format>HTML</format>
							</formats>
						</configuration>
					</execution>
					<!-- Verificar cobertura solo para INSTRUCTION y BRANCH -->
					<execution>
						<id>post-unit-test</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<!-- Configurar el elemento BUNDLE para verificar -->
									<element>BUNDLE</element>
									<limits>
										<!-- Verificar cobertura de instrucciones (INSTRUCTION) -->
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>1.0</minimum> <!-- Requiere 100% de cobertura -->
										</limit>
										<!-- Verificar cobertura de ramas (BRANCH) -->
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>1.0</minimum> <!-- Requiere 100% de cobertura -->
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
